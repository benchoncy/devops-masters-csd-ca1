---
name: Continuous Integration

on:
  workflow_call:
  pull_request:
    branches: ['main']
    paths-ignore:
      - '**/*.md'
    types:
      - synchronize
      - opened

env:
  IMAGE_NAME: 598058097051.dkr.ecr.eu-west-1.amazonaws.com/bpcalc
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  ci:
    name: Continous Integration
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build testing image
        id: test_build
        uses: docker/build-push-action@v3
        with:
          load: true
          target: development
          tags: ${{ env.IMAGE_NAME }}:test

      - name: Lint
        run: |
          docker run -it ${{ env.IMAGE_NAME }}:test \
          --mount src="$(pwd)",target=/app,type=bind \
          poetry run flake8 .

      - name: Unit & BDD tests
        run: |
          docker run -it ${{ env.IMAGE_NAME }}:test \
          --mount src="$(pwd)",target=/app,type=bind \
          coverage run --source=bpcalc -m pytest
      
      - name: Test coverage
        run: |
          docker run -it ${{ env.IMAGE_NAME }}:test \
          --mount src="$(pwd)",target=/app,type=bind \
          coverage report --fail-under=80

      #- name: Get image metadata
      #  id: meta
      #  uses: docker/metadata-action@v4
      #  with:
      #    images: ${{ env.IMAGE_NAME }}
      #    tags: |
      #      type=semver,pattern={{version}},enable={{is_default_branch}}
      #      type=semver,pattern={{major}}.{{minor}},enable={{is_default_branch}}
      #      type=semver,pattern={{major}},enable={{is_default_branch}}
      #      type=raw,value=latest,enable={{is_default_branch}}
      #      type=sha,enable={{is_default_branch}}
      #      type=ref,event=pr
      #    flavor: |
      #      latest=false
    #
      #- name: Build image
      #  id: build
      #  uses: docker/build-push-action@v3
      #  with:
      #    push: false
      #    load: true
      #    context: .
      #    tags: ${{ steps.meta.outputs.tags }}