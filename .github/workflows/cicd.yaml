---
name: Continuous Integration

on:
  workflow_call:
  pull_request:
    branches: ['main']
    paths-ignore:
      - '**/*.md'
    types:
      - synchronize
      - opened

env:
  IMAGE_NAME: 598058097051.dkr.ecr.eu-west-1.amazonaws.com/bpcalc
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  ci:
    name: Continous Integration
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          # Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.34.0
          # Poetry
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.2.2 python3 -
          poetry install

      - name: Lint
        run: |
          poetry run flake8 .
      
      - name: Scan for vulnerabilities, misconfiguration & secrets
        run: |
          trivy fs --security-checks vuln,config,secret .

      - name: Unit tests
        run: |
          poetry run coverage run --source=bpcalc -m pytest tests/unit
          poetry run coverage report --fail-under=50    
      
      - name: BDD tests
        run: |
          poetry run python -m pytest tests/bdd

  cd:
    name: Continous Deployment
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},enable={{is_default_branch}}
            type=semver,pattern={{major}}.{{minor}},enable={{is_default_branch}}
            type=semver,pattern={{major}},enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,enable={{is_default_branch}}
            type=ref,event=pr
          flavor: |
            latest=false
    
      - name: Build image
        id: build
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}